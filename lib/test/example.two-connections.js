// Generated by CoffeeScript 1.7.1
(function() {
  var Fixture, async, expect, mongoose;

  Fixture = require("../fixture");

  async = require("async");

  expect = require("expect.js");

  mongoose = require("mongoose");

  describe.skip("Fixture", function() {
    before(function(done) {
      Fixture.use([]);
      return Fixture.initModels(done);
    });
    beforeEach(function(done) {
      return Fixture.populate(done);
    });
    it("Fixtures should populate Fixture.collections", function() {
      return expect(Fixture.collections.people).to.have.length(4);
    });
    return describe("Person model", function() {
      it("should be able to find things", function(done) {
        return mongoose.models.Person.find({}, function(err, people) {
          expect(people).to.have.length(4);
          return done();
        });
      });
      it("should find stuff", function(done) {
        return mongoose.models.Person.findOne({
          name: "Elon Musk"
        }, function(err, elon) {
          expect(elon.name).to.be("Elon Musk");
          return done();
        });
      });
      it("should delete stuff", function(done) {
        return mongoose.models.Person.findOne({
          name: "Elon Musk"
        }, function(err, elon) {
          elon.remove();
          return mongoose.models.Person.find({}, function(err, people) {
            expect(people).to.have.length(3);
            return done();
          });
        });
      });
      it("should reset deletions", function(done) {
        return mongoose.models.Person.find({}, function(err, people) {
          expect(people).to.have.length(4);
          return done();
        });
      });
      it("should modify stuff", function(done) {
        return mongoose.models.Person.findOne({
          _id: "000000000000000000000004"
        }, function(err, elon) {
          expect(elon.name).to.be("Elon Musk");
          elon.name = "Elon Reeve Musk";
          return elon.save(done);
        });
      });
      it("should reset modifications", function(done) {
        return mongoose.models.Person.findOne({
          _id: "000000000000000000000004"
        }, function(err, elon) {
          if (err) {
            throw err;
          }
          expect(elon.name).to.be("Elon Musk");
          return done();
        });
      });
      it("should insert stuff", function(done) {
        var jaymes;
        jaymes = new mongoose.models.Person({
          name: 'Jaymes Young'
        });
        return jaymes.save(function(err) {
          if (err) {
            throw err;
          }
          return mongoose.models.Person.findOne({
            name: 'Jaymes Young'
          }, function(err, jaymes) {
            if (err) {
              throw err;
            }
            expect(jaymes.name).to.be('Jaymes Young');
            return done();
          });
        });
      });
      it("should reset insertions", function(done) {
        return mongoose.models.Person.find({}, function(err, people) {
          expect(people).to.have.length(4);
          return done();
        });
      });
      it("should findAndModify", function(done) {
        return mongoose.models.Person.findByIdAndUpdate("000000000000000000000004", {
          name: "Elon Reeve Musk"
        }, function(err, elon) {
          if (err) {
            throw err;
          }
          return mongoose.models.Person.findOne({
            _id: "000000000000000000000004"
          }, function(err, elon) {
            if (err) {
              throw err;
            }
            expect(elon.name).to.be("Elon Reeve Musk");
            return done();
          });
        });
      });
      it("should reset findAndModifyes", function(done) {
        return mongoose.models.Person.findOne({
          _id: "000000000000000000000004"
        }, function(err, elon) {
          if (err) {
            throw err;
          }
          expect(elon.name).to.be("Elon Musk");
          return done();
        });
      });
      it("should find and remove (modify)", function(done) {
        return mongoose.models.Person.findByIdAndRemove("000000000000000000000004", function(err) {
          if (err) {
            throw err;
          }
          return mongoose.models.Person.findOne({
            _id: "000000000000000000000004"
          }, function(err, elon) {
            expect(elon).to.be(null);
            return done();
          });
        });
      });
      return it("should reset find and remove (modify)", function(done) {
        return mongoose.models.Person.findOne({
          _id: "000000000000000000000004"
        }, function(err, elon) {
          expect(elon.name).to.be("Elon Musk");
          return done();
        });
      });
    });
  });

}).call(this);
